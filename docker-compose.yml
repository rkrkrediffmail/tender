version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: tender_system
      POSTGRES_USER: doadmin
      POSTGRES_PASSWORD: 12March1986$
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://doadmin:12March1986$@bidpro.postgres.database.azure.com:5432/tender_system?sslmode=require
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: python main.py

  celery:
    build: .
    command: celery -A main.celery worker --loglevel=info --concurrency=2
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://doadmin:12March1986$@bidpro.postgres.database.azure.com:5432/tender_system
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
